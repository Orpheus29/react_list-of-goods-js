{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_BY_NAME","SORT_BY_LENGTH","isNameSelected","isLengthSelected","isReverseSelected","goodsFromServer","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","reverseSelection","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAe,WACfC,EAAiB,SAEnBC,GAAiB,EACjBC,GAAmB,EACnBC,GAAoB,EA6BjB,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA3CR,SAA0BC,EAAOL,EAAWM,GAC1C,IAAMC,EAAa,YAAOF,GAuB1B,OArBAE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKR,EAIH,OAHAE,GAAiB,EACjBC,GAAmB,EAEZc,EAAME,cAAcD,GAC7B,KAAKjB,EAIH,OAHAE,GAAmB,EACnBD,GAAiB,EAEVe,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITN,GACFC,EAAcM,UAGTN,EAmBcO,CACnBjB,EAAiBG,EAAWJ,GAG9B,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAaT,IAC5ByB,KAAK,SACLF,UAAWG,IACT,SAAU,UAAW,CACnB,YAAaxB,IALnB,iCAYA,wBACEsB,QAAS,kBAAMf,EAAaR,IAC5BwB,KAAK,SACLF,UAAWG,IACT,SAAU,aAAc,CACtB,YAAavB,IALnB,4BAYA,wBACEqB,QAAS,WAEPb,GADAP,GAAqBA,GAjFX,WAkF0C,KAEtDqB,KAAK,SACLF,UAAWG,IACT,SAAU,aAAc,CACtB,YAAatB,IARnB,sBAeEI,GAAaE,IAEX,wBACEc,QAAS,WACPf,EAAa,IACbE,EAAgB,IAChBT,GAAiB,EACjBC,GAAmB,EACnBC,GAAoB,GAEtBqB,KAAK,SACLF,UAAU,4BATZ,sBAiBN,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCxHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6d5930c2.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nconst SORT_BY_NAME = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE_ORDER = 'reversed';\nlet isNameSelected = false;\nlet isLengthSelected = false;\nlet isReverseSelected = false;\n\nfunction getPreparedGoods(goods, sortField, reverseSelection) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (sortField) {\n      case SORT_BY_NAME:\n        isNameSelected = true;\n        isLengthSelected = false;\n\n        return good1.localeCompare(good2);\n      case SORT_BY_LENGTH:\n        isLengthSelected = true;\n        isNameSelected = false;\n\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (reverseSelection) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState('');\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, sortField, isReverseSelected,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_BY_NAME)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-info', {\n              'is-light': !isNameSelected,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-success', {\n              'is-light': !isLengthSelected,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            isReverseSelected = !isReverseSelected;\n            setReverseField(isReverseSelected ? REVERSE_ORDER : '');\n          }}\n          type=\"button\"\n          className={cn(\n            'button', 'is-warning', {\n              'is-light': !isReverseSelected,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField)\n          && (\n            <button\n              onClick={() => {\n                setSortField('');\n                setReverseField('');\n                isNameSelected = false;\n                isLengthSelected = false;\n                isReverseSelected = false;\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}